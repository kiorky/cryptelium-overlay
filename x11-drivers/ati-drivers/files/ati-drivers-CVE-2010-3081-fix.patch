diff -ur work/common/lib/modules/fglrx/build_mod/kcl_ioctl.c work.cve/common/lib/modules/fglrx/build_mod/kcl_ioctl.c
--- work/common/lib/modules/fglrx/build_mod/kcl_ioctl.c	2010-10-23 10:20:03.550804456 +0000
+++ work.cve/common/lib/modules/fglrx/build_mod/kcl_ioctl.c	2010-10-23 10:49:23.483406189 +0000
@@ -35,6 +35,9 @@
 
 #ifdef __x86_64__
 #   include "asm/compat.h"
+#   if ARCH_COMPAT_ALLOC_USER_SPACE
+#      include "linux/compat.h"
+#   endif
 #   if LINUX_VERSION_CODE < KERNEL_VERSION(2,6,22)
 #       if LINUX_VERSION_CODE >= KERNEL_VERSION(2,6,12)
 #           include "linux/ioctl32.h"
@@ -193,13 +196,21 @@
  */
 void* ATI_API_CALL KCL_IOCTL_AllocUserSpace32(long size)
 {
-    void __user *ret = COMPAT_ALLOC_USER_SPACE(size);
+    void __user *ptr;
 
-    /* prevent stack overflow */
-    if (!access_ok(VERIFY_WRITE, ret, size))
+    /* If size would occupy more than half of the entire compat space... */
+    if (unlikely(size > (((compat_uptr_t)~0) >> 1)))
         return NULL;
+#if ARCH_COMPAT_ALLOC_USER_SPACE
+    ptr = arch_compat_alloc_user_space(size);
+#else
+    ptr = compat_alloc_user_space(size);
+#endif
+    if (unlikely(!access_ok(VERIFY_WRITE, ptr, size)))
+        return NULL;
+
+    return ptr;
 
-    return (void *)ret;
 }
 
 #endif // __x86_64__
